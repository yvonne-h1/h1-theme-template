{%- comment -%} Import styles for this section {%- endcomment -%}
{%- render 'import-styles', file_name: 'section-main-product.css' -%}

{%- liquid
  # Pre-orders
  assign is_preorder = false
  if settings.enable_pre_order and product.tags contains 'preorder' and product.selected_or_first_available_variant.inventory_quantity <= 0 and product.selected_or_first_available_variant.inventory_policy == 'continue'
    assign is_preorder = true
  endif

  assign product_form_id = 'product-form-' | append: product.id
-%}

{%- capture product_content -%}
  <div class="product grid grid-cols-12 gap-x-4 gap-y-base">

    {%- comment -%} Product title {%- endcomment -%}
    <h1 class="product__title h5 col-span-12 px-content-wrapper-padding md:hidden">
      {{ product.title }}
    </h1>

    {% comment %} Left column: Product media {% endcomment %}
    <div class="product-media col-span-12 md:col-span-7 md:self-start lg:col-span-6 2xl:col-span-7 {% if section.settings.enable_sticky_info -%}product-media-col--sticky group-[.header-sticky:not(.header-hidden)]/body:top-20 md:sticky md:top-4 md:transition-[top] md:duration-300{%- endif -%}">

      {%- comment -%} Skiplink so users can go straight to the product info {%- endcomment -%}
      <a class="button button--primary sr-only !absolute inset-[3px] bottom-auto z-popover !p-2 focus:not-sr-only focus:outline-dashed focus:outline-1 states:no-underline" href="#ProductInfo">
        {% render "render-translation", namespace: "accessibility", key: "skip_to_product_info", fallback: "Skip to product information" -%}
      </a>

      {%- render 'product-media-swiper' -%}
    </div>

    {%- comment -%} Right col: Product info {%- endcomment -%}
    <div id="ProductInfo" class="product__info col-span-12 md:col-span-5 lg:col-span-6 2xl:col-span-5">
      <product-info class="product-info-col flex flex-col gap-y-5 bg-gray-50 px-content-wrapper-padding py-6 md:z-10 md:rounded-md md:drop-shadow-lg">
        {%- comment -%} Product title {%- endcomment -%}
        <h1 class="product__title h5 m-0 hidden md:block">
          {{ product.title }}
        </h1>

        {%- for block in section.blocks -%}
          {%- case block.type -%}

          {%- comment -%} App block {%- endcomment -%}
          {%- when '@app' -%}
            <div class="" {{ block.shopify_attributes }}>
              {% render block %}
            </div>

          {%- comment -%} Product badges {%- endcomment -%}
          {%- when 'badges' -%}
            {%- liquid
              assign badges_classes = 'relative ' | append: block.settings.badge_size
              capture badges
                render 'product-badges', product: product, class: badges_classes
              endcapture
            -%}
            {% if badges != blank %}
              <div class="" {{ block.shopify_attributes }}>
                {{- badges -}}
              </div>
            {% endif %}

          {%- comment -%} Text block {%- endcomment -%}
          {%- when 'text' -%}
            {%- if block.settings.text != blank -%}
              <div class="product__text {{ block.settings.text_size }}" {{ block.shopify_attributes }}>
                {{- block.settings.text -}}
              </div>
            {%- endif -%}

          {%- comment -%} Product price {%- endcomment -%}
          {%- when 'price' -%}
            <div class="flex items-center gap-base">
              <div class="product__price no-js:hidden" id="price-{{ product.id }}" {{ block.shopify_attributes }}>
                {%- render 'render-price',
                  product: product,
                  use_variant: true,
                  show_badges: block.settings.show_badges,
                  font_size: 'text-lg',
                  block: block,
                  is_preorder: is_preorder
                -%}
              </div>
            </div>
            {%- comment -%} Form that is used to set and read the selected variant id. {%- endcomment -%}
            <div class="hidden" {{ block.shopify_attributes }}>
              {%- form 'product', product, id: 'product-form-installment', class: 'installment' -%}
                <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                {{ form | payment_terms }}
              {%- endform -%}
            </div>

          {%- comment -%} usp content {%- endcomment -%}
          {%- when 'usp' -%}
            {%- if block.settings.heading != blank -%}
              <p class="usp peer flex w-full items-center justify-items-start gap-4 text-start text-xs peer-[.usp]:-mt-5"  {{ block.shopify_attributes }}>
                {%- if block.settings.icon != 'none' -%}
                  <span class="usp__icon rounded-full bg-primary-200 p-2">
                    {%- render 'icons', icon: block.settings.icon, icon_class: 'w-4 shrink-0 grow-0' -%}
                  </span>
                {%- endif -%}
                <span class="usp__text">
                  {{- block.settings.heading -}}
                </span>
              </p>
            {%- endif -%}

            {% comment %} Inventory status {% endcomment %}
            {%- when 'inventory' -%}
              <div id="inventory-{{ product.id }}" class="product__inventory no-js-hidden">
              <p
                class="mb-0 flex items-center gap-2 text-sm leading-none {% if product.selected_or_first_available_variant.inventory_management != 'shopify' %}hidden{% endif %}"
                {{ block.shopify_attributes }}
                role="status">
                {%- liquid
                  if product.selected_or_first_available_variant.inventory_management == 'shopify'

                    # Stock available
                    if product.selected_or_first_available_variant.inventory_quantity > 0

                      # Low stock
                      if product.selected_or_first_available_variant.inventory_quantity <= block.settings.inventory_threshold
                        render 'icons', icon: 'warning-orange', icon_class: 'w-4'
                        if block.settings.show_inventory_quantity
                          render "render-translation", namespace: "products.product.inventory", key: "low_stock_show_count", quantity: product.selected_or_first_available_variant.inventory_quantity, fallback: "Low stock: {{ quantity }} left"
                        else
                          render "render-translation", namespace: "products.product.inventory", key: "low_stock", fallback: "Low stock"
                        endif

                      # In Stock
                      else
                        render 'icons', icon: 'warning-green', icon_class: 'w-4'
                        if block.settings.show_inventory_quantity
                          render "render-translation", namespace: "products.product.inventory", key: "in_stock_show_count", quantity: product.selected_or_first_available_variant.inventory_quantity, fallback: "{{ quantity }} in stock"
                        else
                          render "render-translation", namespace: "products.product.inventory", key: "in_stock", fallback: "In stock"
                        endif
                      endif

                    # No stock available
                    else
                      if product.selected_or_first_available_variant.inventory_policy == 'continue'
                        render 'icons', icon: 'warning-green', icon_class: 'w-4'
                        render "render-translation", namespace: "products.product.inventory", key: "out_of_stock_continue_selling", fallback: "In stock"
                      else
                        render 'icons', icon: 'warning-red', icon_class: 'w-4'
                        render "render-translation", namespace: "products.product.inventory", key: "out_of_stock", fallback: "Out of stock"
                      endif
                    endif
                  endif
                -%}
              </p>
            </div>

          {%- comment -%} Line break {%- endcomment -%}
          {%- when 'linebreak' -%}
            <hr class="block-line-break my-0 bg-gray-100 no-js:hidden">

          {%- comment -%} Collapsible content {%- endcomment -%}
          {%- when 'collapsible_tab' -%}
            {%- if block.settings.content != blank or block.settings.page.content != nil -%}
              <collapsible-component class="product__collapsible collapsible group peer block border-t last:border-b peer-[.collapsible]:-mt-5" data-collapsible-group {{ block.shopify_attributes }}>
                <button type="button" class="collapsible__trigger flex w-full items-center gap-2 py-4 text-start text-sm font-bold no-js:pointer-events-none" data-collapsible-trigger>
                  <span class="flex w-full justify-items-start gap-2">
                    {%- if block.settings.icon != blank -%}
                      {%- render 'icons', icon: block.settings.icon, icon_class: 'w-5 shrink-0 grow-0' -%}
                    {%- endif -%}
                    {{ block.settings.heading | default: block.settings.page.title }}
                  </span>
                  {%- render 'icons', icon: 'plus', icon_class: 'w-4 shrink-0 no-js:hidden group-[.collapsible-is-open]:hidden' -%}
                  {%- render 'icons', icon: 'minus', icon_class: 'w-4 shrink-0 hidden no-js:hidden group-[.collapsible-is-open]:block' -%}
                </button>
                <div class="collapsible__target w-full overflow-y-auto" data-collapsible-target>

                  <div class="rte overflow-hidden text-sm">
                    <div class="pb-4 pt-2">
                      {{- block.settings.content -}}
                      {{- block.settings.page.content -}}
                    </div>
                  </div>
                </div>
              </collapsible-component>
            {%- endif -%}

          {%- comment -%} Quantity input {%- endcomment -%}
          {%- when 'quantity_selector' -%}
            {%- if product.available -%}
              <div class="product-form__input product-form__quantity no-js:hidden" {{ block.shopify_attributes }}>
                {%- liquid
                  assign quantity_label_class = ''
                  if block.settings.quantity_label == false
                    assign quantity_label_class = 'hidden'
                  endif

                  # assign the max attribute for the qty input. When there is no inventory management, ignore it
                  if product.selected_or_first_available_variant.inventory_management != blank
                    assign max = product.selected_or_first_available_variant.inventory_quantity
                  endif
                -%}
                <label class="quantity__label  mb-2 block text-sm font-semibold {{ quantity_label_class }}" for="Quantity-{{ product.id }}">
                  {%- render 'render-translation', namespace: "products.product.quantity", key: "label", fallback: "Quantity" -%}
                </label>

                {% comment %} Quantity input {% endcomment %}
                {%- render 'quantity-input',
                  id: product.id,
                  value: 1,
                  qty_product: product,
                  type: 'pdp',
                  max: max,
                  is_preorder: is_preorder
                -%}
              </div>
            {%- endif -%}

          {%- comment -%} Variants {%- endcomment -%}
          {%- when 'variant_picker' -%}
            {%- liquid
              if product.has_only_default_variant != true and product.available
                if block.settings.picker_type == 'radio'
                  # Show variants as radio buttons
                  render 'product-variant-radio', product: product, section: section, block: block, is_preorder: is_preorder
                else
                  # Show variants in dropdowns
                  render 'product-variant-select', product: product, section: section, block: block, is_preorder: is_preorder
                endif
              endif
            -%}

          {%- comment -%} Buy buttons {%- endcomment -%}
          {%- when 'buy_buttons' -%}
            {%- liquid
              assign button_count = 1
              if block.settings.show_dynamic_checkout
                assign button_count = button_count | plus: 1
              endif
            -%}

            <div class="group/add-to-cart" {{ block.shopify_attributes }} data-product-form>
              <div class="
                transition-all
                group-[.is-fixed]/add-to-cart:fixed
                group-[.is-fixed]/add-to-cart:inset-0
                group-[.is-fixed]/add-to-cart:top-auto
                group-[.is-fixed]/add-to-cart:z-fixed group-[.is-fixed]/add-to-cart:bg-white group-[.is-fixed]/add-to-cart:p-4 group-[.is-fixed]/add-to-cart:drop-shadow-[0_1px_15px_rgba(0,0,0,0.15)]" data-product-form-inner>
                <product-form-component class="product-form block">
                  {%- form 'product', product, id: product_form_id, class: 'form', novalidate: 'novalidate', data-type: 'add-to-cart-form' -%}
                    <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                    <input type="hidden" name="quantity" value="1">
                    <input type="hidden" name="inventory_quantity" value="{%- unless is_preorder -%}{{ product.selected_or_first_available_variant.inventory_quantity }}{%- endunless -%}">
                    <input type="hidden" name="properties[_compare_at_price]" value="{{ product.selected_or_first_available_variant.compare_at_price }}">

                    {% comment %} Pre-orders {% endcomment %}
                    {%- if is_preorder -%}
                      <input type="hidden" name="properties[{%- render 'render-translation', namespace: 'products.product', key: 'pre-order', fallback: 'Pre-order' -%}]" value="{% render 'render-translation', namespace: 'products.product.yes', fallback: 'Yes' %}">
                    {% endif %}

                    {%- comment -%} Show variants in dropdowns for the fixed 'add to cart'{%- endcomment -%}
                    <div class="hidden group-[.is-fixed]/add-to-cart:block">
                      {%- render 'product-variant-select',
                        product: product,
                        block: block,
                        class: 'flex gap-base',
                        is_preorder: is_preorder
                      -%}
                    </div>

                    {% comment %} No script variant select {% endcomment %}
                    <noscript>
                      <div class="product-form__input field mb-4 {% if product.has_only_default_variant %} hidden{% endif %}">
                        <label class="field__label {% if block.settings.picker_label == false %} sr-only{% endif %}" for="Variants-{{ product.id }}">
                          {%- render 'render-translation', namespace: "products.product", key: "product_variants", fallback: "Variants" -%}
                        </label>
                        <div class="select text-text-default">
                          <select name="id" id="Variants-{{ product.id }}" class="select__select">
                            {%- for variant in product.variants -%}
                              <option
                                {% if variant == product.selected_or_first_available_variant %}selected="selected"{% endif %}
                                {% if variant.available == false %}disabled{% endif %}
                                value="{{ variant.id }}"
                              >
                                {{ variant.title }}
                                {%- if variant.available == false %} -
                                  {%- render 'render-translation', namespace: "products.product", key: "sold_out", fallback: "Sold out" -%}
                                {% endif %}
                                - {{ variant.price | money_with_currency | strip_html }}
                              </option>
                            {%- endfor -%}
                          </select>
                          <span class="select__select-icon">
                            {%- render 'icons', icon: 'chevron-down', icon_size: 'w-3' -%}
                          </span>
                        </div>
                        <div class="field">
                          <label for="QuantityNoScript-{{ product.id }}" class="field__label">
                            {%- render 'render-translation', namespace: 'products.product.quantity', key: 'input_label', product_item: product.title, fallback: 'Quantity for product' -%}
                          </label>
                          <input
                            class="field__input"
                            type="number"
                            name="quantity"
                            id="QuantityNoScript-{{ product.id }}"
                            min="1"
                            max="{{ product.selected_or_first_available_variant.inventory_quantity }}"
                            value="1"
                            inputmode="numeric">
                        </div>
                      </div>
                    </noscript>

                    <div class="product-form__buttons flex flex-col items-center gap-y-2 group-[.is-fixed]/add-to-cart:mt-4">
                      <button
                        type="submit"
                        name="add"
                        class="button button--lg button--primary w-full"
                        {% if product.selected_or_first_available_variant.available == false %}disabled{% endif %}
                        data-add-to-cart-behavior="{{ settings.add_to_cart_behavior }}"
                        {% render 'klaviyo-tracking', render_data_attributes: true, product_details: product %}
                      >
                        {%- render 'icons', icon: 'cart', icon_class: 'w-6' -%}
                        <span data-add-to-cart-button-text>
                          {%- if product.selected_or_first_available_variant.available -%}
                            {%- render 'render-translation', namespace: "products.product", key: "add_to_cart", fallback: "Add to cart" -%}
                          {%- else -%}
                            {%- render 'render-translation', namespace: "products.product", key: "sold_out", fallback: "Sold out" -%}
                          {%- endif -%}
                        </span>
                      </button>
                      {%- if block.settings.show_dynamic_checkout -%}
                        {{ form | payment_button }}
                      {%- endif -%}
                    </div>
                  {%- endform -%}
                </product-form-component>
              </div>
            </div>
          {%- endcase -%}
        {%- endfor -%}
      </product-info>
    </div>
  </div>
{%- endcapture -%}

{%- capture product_description -%}
  {%- comment -%} Product description {%- endcomment -%}
  {%- if product.description != blank -%}
    <div class="product__description col-span-12 my-4">
      <h2 class="h4">
        {%- render 'render-translation', namespace: 'products.product', key: 'description', fallback: 'Product description' -%}
      </h2>
      <div class="rte">
        {{ product.description }}
      </div>
    </div>
  {%- endif -%}
{%- endcapture -%}

{%- liquid
  # Render the product content and the product description
  render 'render-container-content', class: 'mt-4 z-50 relative', content: product_content, content_class: 'px-0 md:px-8'

  if product_description != ''
    render 'render-container-content', content: product_description
  endif
-%}

{%- comment -%} Import javascript {%- endcomment -%}
<script src="{{ 'main-product.js' | asset_url }}" defer></script>
<script src="{{ 'variants.js' | asset_url }}" defer></script>

{% schema %}
  {
    "name": "Product info",
    "tag": "section",
    "settings": [
      {
        "type": "header",
        "content": "Media",
        "info": "Learn more about [media types](https://help.shopify.com/manual/products/product-media)"
      },
      {
        "type": "checkbox",
        "id": "enable_sticky_info",
        "default": true,
        "label": "Enable sticky product information on large screens"
      },
      {
        "type": "checkbox",
        "id": "enable_video_looping",
        "default": false,
        "label": "Enable video looping"
      }
    ],
    "blocks": [
      {
        "type": "@app"
      },
      {
        "type": "text",
        "name": "Text",
        "settings": [
          {
            "type": "richtext",
            "id": "text",
            "label": "Text"
          },
          {
            "type": "select",
            "id": "text_size",
            "label": "Text size",
            "default": "text-base",
            "options": [
              {
                "value": "text-xs",
                "label": "xs"
              },
              {
                "value": "text-sm",
                "label": "sm"
              },
              {
                "value": "text-base",
                "label": "base"
              },
              {
                "value": "text-lg",
                "label": "lg"
              },
              {
                "value": "text-xl",
                "label": "xl"
              }
            ]
          }
        ]
      },
      {
        "type": "badges",
        "name": "Badges",
        "limit": 1,
        "settings": [
          {
            "type": "select",
            "id": "badge_size",
            "default": "",
            "label": "Badge size",
            "options": [
              {
                "value": "",
                "label": "Default (responsive)"
              },
              {
                "value": "badges--sm",
                "label": "Small"
              },
              {
                "value": "badges--md",
                "label": "Medium"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": "Define the colors displayed as buttons in the Theme Settings under 'General'."
          }
        ]
      },
      {
        "type": "price",
        "name": "Price",
        "limit": 1,
        "settings": [
          {
            "type": "checkbox",
            "id": "show_badges",
            "default": false,
            "label": "Show badges"
          }
        ]
      },
      {
        "type": "linebreak",
        "name": "Line break"
      },
      {
        "type": "quantity_selector",
        "name": "Quantity selector",
        "limit": 1,
        "settings": [
          {
            "type": "checkbox",
            "id": "quantity_label",
            "default": true,
            "label": "Show label"
          }
        ]
      },
      {
        "type": "variant_picker",
        "name": "Variant picker",
        "limit": 1,
        "settings": [
          {
            "type": "checkbox",
            "id": "picker_label",
            "default": true,
            "label": "Show label"
          },
          {
            "type": "select",
            "id": "picker_type",
            "default": "radio",
            "label": "Variant display",
            "options": [
              {
                "value": "dropdown",
                "label": "Dropdown"
              },
              {
                "value": "radio",
                "label": "Radio inputs"
              }
            ]
          },
          {
            "type": "select",
            "id": "color_variant_display",
            "default": "images",
            "label": "Linked color variant display",
            "info": "This only applies to color variants added through the metafield. Color variants of the current product will be rendered as selected above.",
            "options": [
              {
                "value": "swatches",
                "label": "Swatches"
              },
              {
                "value": "images",
                "label": "Variant images"
              }
            ]
          },
          {
            "type": "select",
            "id": "picker_layout",
            "default": "inline",
            "label": "Option alignment",
            "options": [
              {
                "value": "inline",
                "label": "Inline"
              },
              {
                "value": "block",
                "label": "Block"
              }
            ]
          },
          {
            "type": "paragraph",
            "content": "Define the colors displayed as radio inputs in the Theme Settings under 'General'."
          }
        ]
      },
      {
        "type": "inventory",
        "name": "Inventory",
        "limit": 1,
        "settings": [
          {
            "type": "range",
            "id": "inventory_threshold",
            "label": "Inventory threshold",
            "min": 0,
            "max": 100,
            "step": 1,
            "info": "When the inventory is below this threshold, the message will change.",
            "default": 10
          },
          {
            "type": "checkbox",
            "id": "show_inventory_quantity",
            "label": "Show inventory quantity",
            "default": true
          }
        ]
      },
      {
        "type": "buy_buttons",
        "name": "Buy buttons",
        "limit": 1,
        "settings": [
          {
            "type": "checkbox",
            "id": "show_dynamic_checkout",
            "default": true,
            "label": "Show dynamic checkout buttons",
            "info": "Using the payment methods available on your store, customers see their preferred option, like PayPal or Apple Pay. [Learn more](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)"
          }
        ]
      },
      {
        "type": "collapsible_tab",
        "name": "Collapsible tab",
        "settings": [
          {
            "type": "text",
            "id": "heading",
            "default": "Collapsible tab",
            "info": "Include a heading that explains the content. Leave empty to use page title from page selected below.",
            "label": "Heading"
          },
          {
            "type": "richtext",
            "id": "content",
            "label": "Tab content",
            "default": "<p>Collapsible content</p>"
          },
          {
            "type": "page",
            "id": "page",
            "label": "Tab content from page"
          },
          {
            "type": "select",
            "id": "icon",
            "default": "none",
            "label": "Icon",
            "options": [
              {
                "value": "none",
                "label": "None"
              },
              {
                "value": "box",
                "label": "Box"
              },
              {
                "value": "chat_bubble",
                "label": "Chat bubble"
              },
              {
                "value": "checkmark",
                "label": "Check mark"
              },
              {
                "value": "dryer",
                "label": "Dryer"
              },
              {
                "value": "eye",
                "label": "Eye"
              },
              {
                "value": "heart",
                "label": "Heart"
              },
              {
                "value": "iron",
                "label": "Iron"
              },
              {
                "value": "leaf",
                "label": "Leaf"
              },
              {
                "value": "leather",
                "label": "Leather"
              },
              {
                "value": "lock",
                "label": "Lock"
              },
              {
                "value": "map_pin",
                "label": "Map pin"
              },
              {
                "value": "pants",
                "label": "Pants"
              },
              {
                "value": "plane",
                "label": "Plane"
              },
              {
                "value": "price_tag",
                "label": "Price tag"
              },
              {
                "value": "question_mark",
                "label": "Question mark"
              },
              {
                "value": "return",
                "label": "Return"
              },
              {
                "value": "ruler",
                "label": "Ruler"
              },
              {
                "value": "shirt",
                "label": "Shirt"
              },
              {
                "value": "shoe",
                "label": "Shoe"
              },
              {
                "value": "star",
                "label": "Star"
              },
              {
                "value": "truck",
                "label": "Truck"
              },
              {
                "value": "washing",
                "label": "Washing"
              }
            ]
          }
        ]
      },
      {
        "type": "usp",
        "name": "USP",
        "settings": [
          {
            "type": "inline_richtext",
            "id": "heading",
            "default": "Secure payment",
            "label": "Text"
          },
          {
            "type": "select",
            "id": "icon",
            "default": "none",
            "label": "Icon",
            "options": [
              {
                "value": "none",
                "label": "None"
              },
              {
                "value": "box",
                "label": "Box"
              },
              {
                "value": "chat_bubble",
                "label": "Chat bubble"
              },
              {
                "value": "checkmark",
                "label": "Check mark"
              },
              {
                "value": "dryer",
                "label": "Dryer"
              },
              {
                "value": "eye",
                "label": "Eye"
              },
              {
                "value": "heart",
                "label": "Heart"
              },
              {
                "value": "iron",
                "label": "Iron"
              },
              {
                "value": "leaf",
                "label": "Leaf"
              },
              {
                "value": "leather",
                "label": "Leather"
              },
              {
                "value": "lock",
                "label": "Lock"
              },
              {
                "value": "map_pin",
                "label": "Map pin"
              },
              {
                "value": "pants",
                "label": "Pants"
              },
              {
                "value": "plane",
                "label": "Plane"
              },
              {
                "value": "price_tag",
                "label": "Price tag"
              },
              {
                "value": "question_mark",
                "label": "Question mark"
              },
              {
                "value": "return",
                "label": "Return"
              },
              {
                "value": "ruler",
                "label": "Ruler"
              },
              {
                "value": "shirt",
                "label": "Shirt"
              },
              {
                "value": "shoe",
                "label": "Shoe"
              },
              {
                "value": "star",
                "label": "Star"
              },
              {
                "value": "truck",
                "label": "Truck"
              },
              {
                "value": "washing",
                "label": "Washing"
              }
            ]
          }
        ]
      }
    ]
  }
{% endschema %}
