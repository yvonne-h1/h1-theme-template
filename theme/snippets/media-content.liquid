{% comment %}
  Renders a background image with text overlayed. Text can be positioned anywhere over the image. Used in the media-banner and slider sections.

  render 'media-content', object: section, lazy: true, id: section.id

  - object: Required. Section or Block.
  - id: String. Required
  - class: String. Defaults to 'media-banner'
  - lazy: Boolean. Image lazy loading
  - min_ratio_mobile: String (optional)
  - min_ratio_tablet: String (optional)
  - animate: Boolean

  Object should contain:
  - position_horizontal
  - position_vertical
  - min_ratio_mobile
  - min_ratio_tablet
  - image_desktop
  - image_mobile
  - image_lazy
  - content_color_scheme
  - heading
  - heading_element
  - heading_size
  - heading_color
  - text
  - text_color
  - text_align
  - button_label_1
  - button_url_1
  - button_label_2
  - button_url_2
  - button_type_1
  - button_type_2
{% endcomment %}

{%- liquid
  unless animate == true
    assign animate = false
  endunless

  unless lazy == true
    assign lazy = false
  endunless

  unless is_swiper
    assign is_swiper = false
  endunless

  if class == blank
    assign class = 'media-banner'
  endif

  if id == blank
    assign id = '1'
  endif

  # Assign mobile image
  assign image_desktop = object.settings.image_desktop
  assign image_mobile = image_desktop
  if object.settings.image_mobile != blank
    assign image_mobile = object.settings.image_mobile
    assign min_width = 768
  endif

  # Define the aspec ratio
  unless min_ratio_mobile
    assign min_ratio_mobile = object.settings.min_ratio_mobile
  endunless

  unless min_ratio_tablet
    assign min_ratio_tablet = object.settings.min_ratio_tablet
  endunless

  if min_ratio_mobile == ''
    if object.settings.image_mobile
      assign min_ratio_mobile = object.settings.image_mobile.aspect_ratio
    else
      assign min_ratio_mobile = 'aspect-[16/9]'
    endif
  endif

  if min_ratio_tablet == ''
    if image_desktop
      assign min_ratio_tablet = image_desktop.aspect_ratio
    else
      assign min_ratio_tablet = 'aspect-[16/9]'
    endif
  endif

  # video settings
  assign is_video = false
  if object.settings.video_url != blank or object.settings.video_mp4 != blank
    assign is_video = true
    assign video_id = object.settings.video_url.id

    assign video_type = object.settings.video_url.type
    if video_type == 'youtube'
      assign element = 'youtube-video'
    elsif video_type == 'vimeo'
      assign element = 'vimeo-video'
    else
      assign element = 'custom-video'
    endif

    unless video_type
      assign video_type = 'mp4'
    endunless

    if object.settings.video_autoplay == blank
      assign autoplay = false
    else
      assign autoplay = object.settings.video_autoplay
    endif

    if object.settings.loop_video == blank
      assign loop = false
    else
      assign loop = object.settings.loop_video
    endif

    if object.settings.video_controls == blank
      assign controls = false
    else
      assign controls = object.settings.video_controls
    endif

    assign video_class = 'video-element__video h-full w-full' | append: ' ' | append: min_ratio_mobile | append: ' ' | append: min_ratio_tablet
  endif
-%}

{% comment %} Banner wrapper {% endcomment %}
<div
  class="{{- class -}}__wrapper relative {% if is_swiper -%}swiper-slide{%- endif %} {{ min_ratio_mobile }} {{ min_ratio_tablet }} {% unless object.settings.container_width == 'container--full' %}w-full min-w-full{%- endunless %} {% if animate -%}bg-black{%- endif -%}"
  style="--animation-delay: 1;"
  {% if is_swiper and index != null %}
    data-swiper-slide-index="{{ index }}" {{ block.shopify_attributes }}
  {%- endif %}
  {% if is_swiper and is_video -%}
    data-swiper-video-type="{{ element }}"
  {%- endif %}>
  {% comment %} Banner image {% endcomment %}
  {%- liquid
    assign image_class = 'object-cover'
    if animate
      assign image_class = image_class | append: ' motion-safe:animate-zoomout motion-safe:opacity-0 motion-safe:scale-125 transition-all'
    endif
    assign image_class_desktop = image_class | append: ' hidden md:block'
    assign image_class_mobile = image_class | append: ' md:hidden'

    assign mobile_aspect = min_ratio_mobile | split: '[' | last | remove: ']'
    assign tablet_aspect = min_ratio_tablet | split: '[' | last | remove: ']'

    capture image
      if image_desktop != blank
        # Desktop image
        render 'responsive-image', image_object: image_desktop, class: image_class_desktop, max_width: max_width, min_width: min_width, lazy: lazy, aspect_ratio: tablet_aspect
        # Mobile image
        render 'responsive-image', image_object: image_mobile, class: image_class_mobile, max_width: 768, lazy: lazy, aspect_ratio: mobile_aspect
      endif
    endcapture
  -%}

  {% comment %} Add the custom element wrapper {% endcomment %}
  {%- if is_video -%}
    <{{ element }}
      class="block h-full w-full overflow-hidden"
      data-options='
        {
        {% if video_type != 'mp4' -%}
          "id": "{{- video_id -}}",
        {% endif %}
        {%- if video_type == 'vimeo' -%}
          "wrapperID": "{{- 'vimeo-player' | append: '-' | append: video_id | append: '-' | append: id -}}",
        {% endif %}
          "loop": {{- loop -}},
          "isSwiper": {{ is_swiper }},
          "autoplay": {{ autoplay }},
          "controls": {{ object.settings.video_controls }},
          "description": "{{ object.settings.video_description | default: '' }}"
        }
      '>
  {%- endif -%}

  {% comment %} Video or image {% endcomment %}
  <div class="{{- class -}}__image absolute inset-0 {{ min_ratio_mobile }} {{ min_ratio_tablet }}">
    {% comment %} Render video {% endcomment %}
    {%- if is_video -%}
      <div class="video-element {% unless is_swiper -%}{{ min_ratio_mobile }} {{ min_ratio_tablet }}{%- endunless %}">
        {% comment %} Capture the video placeholder. On click, this will play the video {% endcomment %}
        <div class="video-element__placeholder absolute inset-0 z-10 flex cursor-pointer items-center justify-center" data-video-trigger>
          <div class="absolute inset-0 {% unless is_swiper -%}{{ min_ratio_mobile }} {{ min_ratio_tablet }}{%- endunless %}">
            {%- if image_desktop != blank -%}
              {{- image -}}
            {%- elsif object.settings.video_mp4 != blank -%}
              {{
                object.settings.video_mp4
                | image_url: width: object.settings.video_mp4.preview_image.width
                | image_tag: class: image_class, sizes: '100vw', widths: '320, 360, 375, 420, 480, 520, 600, 680, 768, 850, 960, 1080, 1200, 1280, 1440, 1536, 1600, 1920, 2048, 2560, 2880, 4000'
              }}
            {%- endif -%}
          </div>

          {%- unless object.settings.button_1_play or object.settings.button_2_play -%}
            <button
              class="video-element__button button button--primary h-20 w-20 rounded-full p-0"
              aria-label="{%- render 'render-translation', namespace: 'products.product.media', key: 'play_video', fallback: 'Play video' -%}"
              data-video-play-button>
              {%- render 'icons', icon: 'play', icon_class: 'w-6' -%}
            </button>
          {%- endunless -%}
        </div>

        {% comment %} Render a custom implementation {% endcomment %}
        {%- if video_type == 'youtube' -%}
          <div id="ytplayer" class="video-element__video--youtube {{ video_class }}"></div>
        {%- elsif video_type == 'vimeo' -%}
          <div id="vimeo-player-{{ video_id }}-{{ id }}" class="video-element__video--vimeo {{ video_class }}"></div>
        {%- else -%}
          {%- liquid
            # Render MP4 video
            assign video_class = video_class | append: ' video-element__video--mp4 object-cover'
            echo object.settings.video_mp4 | video_tag: image_size: '1x', autoplay: autoplay, muted: autoplay, loop: loop, controls: controls, class: video_class
          -%}
        {%- endif -%}
      </div>
    {%- else -%}
      {% comment %} Render image {% endcomment %}
      {{- image -}}
    {%- endif -%}
  </div>

  {% comment %} Banner content {% endcomment %}
  {%- if object.settings.heading != blank or object.settings.text != blank or button_1 or button_2 -%}
    <div
      class="{{- class -}}__content-wrapper content-wrapper relative z-20 flex h-full motion-safe:animate-fadein motion-safe:opacity-0 {{ object.settings.position_horizontal }} {{ object.settings.position_vertical }} {{ object.settings.text_align }} {% if is_swiper -%}{{ min_ratio_mobile }} {{ min_ratio_tablet }}{%- endif %}"
      {% if is_video %}
        data-video-content
      {%- endif -%}>
      <div class="{{- class -}}__content relative mx-content-wrapper-padding mb-8 mt-16 inline-flex max-w-[80%] flex-col gap-y-4 p-6 md:my-20 md:max-w-screen-sm md:p-8 md:px-12 {{ object.settings.content_color_scheme -}}">
        {% comment %} Heading {% endcomment %}
        {%- if object.settings.heading != blank -%}
          <{{ object.settings.heading_element }} class="{{- object.settings.heading_size }} {{ object.settings.heading_color -}} m-0">
            {{- object.settings.heading -}}
          </{{ object.settings.heading_element }}>
        {%- endif -%}

        {% comment %} Text {% endcomment %}
        {%- if object.settings.text != blank -%}
          <div class="{{- object.settings.text_color -}}">
            {{- object.settings.text -}}
          </div>
        {%- endif -%}

        {% comment %} Buttons {% endcomment %}
        {%- liquid
          # Button alligment
          case object.settings.text_align
            when 'text-start'
              assign buttons_alignment = 'justify-start'
            when 'text-center'
              assign buttons_alignment = 'justify-center'
            when 'text-end'
              assign buttons_alignment = 'justify-end'
          endcase
        -%}
        {%- if object.settings.enable_button_1 or object.settings.enable_button_2 -%}
          <div class="{{- class -}}__buttons flex items-center gap-4 first:mt-0 {{ buttons_alignment -}}">
            {%- for i in (1..2) -%}
              {%- liquid
                assign play_button = 'button_' | append: i | append: '_play'
                assign button_label = 'button_label_' | append: i
                assign button_type = 'button_type_' | append: i
                assign button_url = 'button_url_' | append: i
                assign new_window = 'new_window_' | append: i
                assign enable_button = 'enable_button_' | append: i
                assign render_button = false

                if forloop.index == i and object.settings[enable_button]
                  assign render_button = true
                endif
              -%}

              {% comment %} Button 1 {% endcomment %}
              {%- if render_button -%}
                {%- if object.settings[play_button] -%}
                  <button class="button {{ object.settings[button_type] }}" data-video-trigger>
                    {%- render 'icons', icon: 'play', icon_size: 'w-4' -%}
                    {{- object.settings[button_label] -}}
                  </button>
                {%- else -%}
                  <a
                    href="{{ object.settings[button_url] | default: '#' }}"
                    {% if new_window -%}
                      target="_blank" rel="noopener"
                    {%- endif %}
                    class="button {{ object.settings[button_type] }}{% if object.settings[button_url] == blank %} disabled{% endif %}">
                    {{- object.settings[button_label] -}}
                  </a>
                {%- endif -%}
              {%- endif -%}
            {%- endfor -%}
          </div>
        {%- endif -%}
      </div>
    </div>
  {%- endif -%}

  {% comment %} Close the custom element {% endcomment %}
  {%- if is_video -%}
    </{{ element }}>
  {%- endif -%}
</div>
