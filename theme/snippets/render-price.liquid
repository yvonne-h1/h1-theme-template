{% comment %}
  Renders a list of product's price (regular, sale)

  Accepts:
  - product: {Object} Product Liquid object (optional)
  - use_variant: {Boolean} Renders selected or first variant price instead of overall product pricing (optional)
  - show_badges: {Boolean} Renders 'Sale' and 'Sold Out' tags if the product matches the condition (optional)
  - price_class: {String} Adds a price class to the price element (optional)

  Usage:
  {% render 'render-price', product: product %}
{% endcomment %}

{%- liquid
  unless use_variant
    assign use_variant = false
  endunless

  unless is_preorder
    assign is_preorder = false
  endunless

  if use_variant
    assign target = product.selected_or_first_available_variant
  else
    assign target = product
  endif

  assign available = target.available | default: false
  assign compare_at_price = target.compare_at_price | default: 1999
  assign price = target.price | default: 1999

  if target.original_price > target.price
    assign compare_at_price = target.original_price
  endif

  assign money_price = price | money_with_currency

  capture sale_price_str
    render 'render-translation', namespace: 'products.product.price', key: 'sale_price', fallback: 'Sale'
  endcapture

  capture regular_price_str
    render 'render-translation', namespace: 'products.product.price', key: 'regular_price', fallback: 'Regular price'
  endcapture

  capture from_price_str
    render 'render-translation', namespace: 'products.product.price', key: 'from_price_html', price: money_price, fallback: 'From'
  endcapture

  unless font_size
    assign font_size = 'text-sm'
  endunless

  unless show_badges
    assign show_badges = false
  endunless
-%}

<div
  class="
    price {{ font_size }} flex flex-wrap items-center justify-items-center gap-2
    {% liquid
      if price_class
        echo price_class
      endif
      if available == false
        echo ' price--sold-out'
      endif
      if compare_at_price > price
        echo ' price--on-sale'
      endif
    -%}
  ">
  {%- liquid
    # Badges
    if show_badges
      if product.available == false or is_preorder or target.compare_at_price > target.price or target.price_varies and target.compare_at_price_varies
        assign badges_classes = 'relative ' | append: block.settings.badge_size
        capture badges
          render 'product-badges', product: product, class: badges_classes
        endcapture
        if badges != blank
          echo '<div>' | append: badges | append: '</div>'
        endif
      endif
    endif
  -%}

  <div class="flex">
    {%- comment -%} Different compare at prices, so display 'from' label (on collection pages) {%- endcomment -%}
    {%- if use_variant == false and target.price_varies or target.compare_at_price_varies %}
      <dl class="price__regular">
        <dt class="sr-only ">
          {{ regular_price_str }}
        </dt>
        <dd class="price__item price__item--regular">
          {{ from_price_str }}
        </dd>
      </dl>

      {%- comment -%} Product or variant is on sale {%- endcomment -%}
    {%- elsif compare_at_price > target.price or target.price_varies and target.compare_at_price_varies %}
      <dl class="price__sale flex flex-wrap gap-x-2">
        <dt class="sr-only">
          {{ sale_price_str }}
        </dt>
        <dd class="price__item price__item--sale font-bold text-primary">
          {{ money_price }}
        </dd>
        <dt class="sr-only ">
          {{ regular_price_str }}
        </dt>
        <dd class="">
          <s class="price__item price__item--compare opacity-70 contrast-more:opacity-100">
            {{ compare_at_price | money_with_currency }}
          </s>
        </dd>
      </dl>

      {%- comment -%} Regular price {%- endcomment -%}
    {%- else -%}
      <dl class="price__regular">
        <dt class="sr-only ">
          {{ regular_price_str }}
        </dt>
        <dd class="price__item price__item--regular">
          {{ money_price }}
        </dd>
      </dl>
    {%- endif -%}
  </div>
</div>
