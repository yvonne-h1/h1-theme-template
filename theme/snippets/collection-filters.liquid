{%- comment -%}
  Collection filter
  Accepts:
  - section:         {Object} main-collection.liquid section object (required)
{%- endcomment -%}

{%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}

<div
  id="main-collection-filters"
  data-id="{{ section.id }}">
  <collection-filters-form class="relative">
    {%- comment -%} Skiplink so users can go straight to the products {%- endcomment -%}
    {%- if settings.filter_display == 'grid' -%}
      <a
        class="button button--primary sr-only invisible !absolute left-0 top-0 z-20 !p-2 focus:outline-dashed focus:outline-1 states:no-underline lg:visible lg:focus:not-sr-only"
        href="#CollectionProductGrid">
        {% render 'render-translation', namespace: 'accessibility', key: 'skip_filters', fallback: 'Skip to products' -%}
      </a>
    {%- endif -%}

    {%- comment -%} Backdrop when the collection filter is open {%- endcomment -%}
    <class-toggle-component
      class="filter__backdrop backdrop group-[.filter-is-open]/body:backdrop--active z-modal-backdrop"
      tabindex="-1"
      aria-hidden="true"
      data-options='
        {
          "classToToggle": "filter-is-open"
        }
      '></class-toggle-component>

    {% comment %} The filters {% endcomment %}
    <form
      id="CollectionFiltersForm"
      class="group/filter filter {% if settings.filter_display == 'grid' -%}group/grid{% elsif settings.filter_display == 'flex' -%}group/flex{%- endif -%}"
      data-collection-filters-form>
      {%- comment -%} The collection filter drawer {%- endcomment -%}
      <div
        class="
          filter__drawer fixed bottom-0 end-0 top-0 z-modal w-full max-w-sm translate-x-full overflow-y-auto bg-bg-default text-sm transition-transform duration-[500ms] ease-[cubic-bezier(.25,.2,.25,1)]

          {% comment %} When flex layout is used, make sure the element doesn't overlap the modals {% endcomment %}
          {% if settings.filter_display == 'flex' -%}
            md:z-30
          {%- endif %}

          {% comment %} If the body group has class filter-is-open, add these styles {% endcomment %}
          group-[.filter-is-open]/body:translate-x-0

          {% comment %} On LG screens, if the group has group/grid, add these styles {% endcomment %}
          group-[.filter]/grid:lg:inset-unset
          group-[.filter]/flex:md:inset-unset
          group-[.filter]/flex:md:relative
          group-[.filter]/flex:md:max-w-none
          group-[.filter]/flex:md:translate-x-0
          group-[.filter]/flex:md:overflow-visible

          group-[.filter]/grid:lg:relative
          group-[.filter]/grid:lg:z-10
          group-[.filter]/grid:lg:max-w-none
          group-[.filter]/grid:lg:translate-x-0
        ">
        <div class="invisible group-[.filter-is-open]/body:visible group-[.filter]/flex:md:visible group-[.filter]/grid:lg:visible">
          {%- comment -%} The collection drawer header. {%- endcomment -%}
          <div class="filter__header sticky top-0 z-10 flex items-center justify-between border-b bg-white px-6 py-2 group-[.filter]/flex:md:hidden group-[.filter]/grid:lg:hidden">
            <div class="flex items-center justify-between gap-2">
              <h2 class="filter-options__heading text-bold m-0 text-base">
                {%- render 'render-translation', namespace: 'sections.collection_template', key: 'filter', fallback: 'Filter' -%}
              </h2>
              {%- comment -%} Filter reset link {%- endcomment -%}
              <filter-remove class="block">
                <a
                  href="{{ collection.url }}?sort_by={{ sort_by }}"
                  class="button button--sm button--link pe-0 ps-0 font-body"
                  data-filter-remove
                  data-filter-clear-all>
                  {%- render 'render-translation', namespace: 'sections.collection_template', key: 'clear_all', fallback: 'Clear all' -%}
                </a>
              </filter-remove>
            </div>
            <class-toggle-component
              class="flex justify-end"
              data-options='
                {
                  "classToToggle": "filter-is-open"
                }
              '>
              <button
                type="button"
                class="filter__close button button--link -me-3 border-none p-3 {% if settings.filter_display == 'grid' -%}lg:hidden{%- endif -%}"
                aria-label="{% render "render-translation", namespace: "accessibility", key: "close", fallback: "Close filter" %}">
                {%- render 'icons', icon: 'close', icon_class: 'w-6' -%}
              </button>
            </class-toggle-component>
          </div>

          {%- liquid
            assign collapsible = settings.enable_filter_collapsibles
            if settings.filter_display == 'flex'
              assign collapsible = true
            endif
          -%}

          {%- if collapsible -%}
            <collapsible-component
              data-options='
                {
                  "closeSiblings": true,
                  "trapFocus": false,
                  "openOnMobile": true
                }
              '>
          {%- endif -%}
          {%- comment -%} Main content {%- endcomment -%}
          <div class="filter__main relative z-0 py-4 {% if settings.filter_display == 'flex' -%}md:mb-8 md:flex md:flex-wrap md:border-b md:py-0 md:gap-x-base{%- endif -%}">
            {%- liquid
              render 'filter-options-active', section: section
              # Loop through the filter options
              assign is_last = false
              for filter in collection.filters
                assign filter_index = forloop.index
                if forloop.last
                  assign is_last = true
                endif

                # Loop and output filters
                case filter.type
                  when 'list'
                    render 'filter-options-list', filter: filter, filter_index: filter_index, collapsible: collapsible, is_last: is_last
                  when 'price_range'
                    render 'filter-options-price-range', filter: filter, filter_index: filter_index, collapsible: collapsible, is_last: is_last
                endcase
              endfor
            -%}
          </div>
          {%- if collapsible -%}
            </collapsible-component>
          {%- endif -%}

          {%- comment -%} Footer {%- endcomment -%}
          <div class="filter__footer sticky bottom-0 z-10 bg-bg-default px-6 py-4 group-[.filter]/flex:md:hidden group-[.filter]/grid:lg:hidden">
            <class-toggle-component
              data-options='
                {
                  "classToToggle": "filter-is-open"
                }
              '>
              <button type="button" class="button button--primary button--lg group-[.loading]/filter:button--loading flex w-full">
                {%- render 'render-translation', namespace: 'sections.collection_template', key: 'apply', fallback: 'Apply' -%}
              </button>
            </class-toggle-component>
          </div>
        </div>
      </div>

      {%- comment -%} Collection type and filters {%- endcomment -%}
      {%- if collection.current_vendor or collection.current_type -%}
        <input
          type="hidden"
          name="q"
          value="{{ collection.current_vendor }}{{ collection.current_type }}">
      {%- endif -%}
    </form>
  </collection-filters-form>
</div>

<script src="{{ 'collection-filters-form.js' | asset_url }}" defer></script>
