{%- comment -%}
  Renders a quick shop with variant selection and add to cart functionality.

  Accepts:
  - product: {Object}  Product Liquid object (required)
  - quick_shop_render_second_option: {Boolean} (optional) If true, renders option2 of each variant, otherwise renders option1
  - unique_identifier {String}

  Usage:
  {%-
    render 'quick-shop',
    product: product,
    quick_shop_render_second_option: quick_shop_render_second_option,
    unique_identifier: 'card'
  -%}
{%- endcomment -%}

{%- liquid
  # Check if we use the first or second variant option
  if quick_shop_render_second_option
    assign option_to_render = product.options_with_values | last
  else
    assign option_to_render = product.options_with_values | first
  endif

  # Check if option is of type color
  assign is_color = false
  assign variant_option_label = option_to_render.name | handleize
  assign color_variant_label_handleized = settings.color_filter_name | handleize

  if color_variant_label_handleized == variant_option_label
    assign is_color = true
  endif

  unless add_to_cart_behavior
    assign add_to_cart_behavior = settings.add_to_cart_behavior
  endunless

  unless is_cart_drawer_recommendations
    assign is_cart_drawer_recommendations = false
  endunless

  if product.variants.size == 1
    assign show_quick_shop = false
  endif

  if section.id
    assign unique_id = section.id | append: '-' | append: product.handle
  else
    assign unique_id = template.name | handleize | append: '-' | append: product.handle
  endif

  if unique_identifier != blank
    assign unique_id = unique_id | append: '-' | append: unique_identifier
  endif

  assign button_class = 'button button--primary h-full rounded-full no-touch:p-2 touch:py-3'
-%}

<quick-shop class="quick-shop">
  {%- comment -%} Show the quickshop when there is more than 1 variant, else just add the product immediately {%- endcomment -%}
  {%- if show_quick_shop == false -%}
    {%- comment -%} Render a default ATC button without quickshop {%- endcomment -%}
    <product-form-component class="quick-shop__form quick-shop__form--no-variants mx-auto">
      {%- assign product_form_id = 'product-card-form-' | append: unique_id -%}
      {%- form 'product', product, id: product_form_id, class: 'form h-full', novalidate: 'novalidate', data-type: 'add-to-cart-form' -%}
        <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
        <input type="hidden" name="inventory_quantity" value="{{ product.selected_or_first_available_variant.inventory_quantity }}">

        {%- comment -%} If preorder is enabled for this product add a line proprety when adding to the cart {%- endcomment -%}
        {%- if settings.enable_pre_order
          and product.tags contains 'preorder'
          and product.selected_or_first_available_variant.inventory_quantity <= 0
          and product.selected_or_first_available_variant.inventory_policy == 'continue'
        -%}
          <input
            type="hidden"
            name="properties[{%- render 'render-translation', namespace: 'products.product', key: 'pre-order', fallback: 'Pre-order' -%}]"
            value="{% render 'render-translation', namespace: 'products.product.yes', fallback: 'Yes' %}">
        {%- endif -%}
        <button
          type="submit"
          name="add"
          class="quick-shop__button quick-shop__button--form {{ button_class }}"
          data-add-to-cart-behavior="{{ settings.add_to_cart_behavior }}">
          {%- render 'icons', icon: 'cart', icon_class: 'w-5' -%}
          <span>
            {%- render 'render-translation', namespace: 'products.product', key: 'add_to_cart_short', fallback: 'Add' -%}
          </span>
        </button>
      {%- endform -%}
    </product-form-component>
  {%- else -%}
    <div id="QuickShop-{{ product.id }}-{{ unique_id }}" class="quick-shop__variants hidden text-center transition-all delay-100">
      {%- comment -%} Title {%- endcomment -%}
      <p class="quick-shop__title mb-1 text-sm font-bold text-text-default">
        {%- render 'render-translation', namespace: 'products.product', key: 'choose_your_option', option: variant_option_label, fallback: 'Choose your {{ option }}' -%}
      </p>

      {%- comment -%} Variant options {%- endcomment -%}
      <div class="quick-shop__options options justify-center gap-0" data-quick-shop-options-wrapper>
        {% for variant in product.variants %}
          {%- liquid
            # Get value of the option
            if quick_shop_render_second_option and variant.option2
              assign option_label = variant.option2
            elsif product.has_only_default_variant
              capture option_label
                render 'render-translation', namespace: 'products.product.add_to_cart', fallback: 'Add to cart'
              endcapture
            else
              assign option_label = variant.option1
            endif

            # If this is a color option get hex color
            if is_color
              assign color_mappings = settings.color_mappings | newline_to_br | strip_newlines | split: '<br />'
              assign color_option_name = option_label | handleize
              assign color_is_mapped = false
              assign color_hex = ''

              # Loop through color mappings
              for color in color_mappings
                assign color_name = color | split: '|' | first | handleize

                if color_name == color_option_name
                  assign color_hex = color | split: '|' | last
                  assign color_is_mapped = true
                endif
              endfor
            endif

            # Output option
            assign disabled_classes = ''
            if variant.available == false
              assign disabled_classes = 'option__label--disabled'
            endif
          -%}

          <div class="quick-shop__option option">
            <input
              id="quick-shop__item-{{ unique_id }}-{{ variant.id }}"
              class="quick-shop__input option__input"
              value="{{ variant.id }}"
              type="radio"
              name="variant-{{ product.handle }}"
              {% if variant.available == false %}
                disabled
              {% endif %}
              data-inventory-quantity="{{- variant.inventory_quantity -}}"
              data-quick-shop-option
              tabindex="0"
              {% render 'klaviyo-tracking', render_data_attributes: true, product_details: product %}>
            <label
              class="option__label option__label--{{ variant_option_label }} {{ disabled_classes }}"
              for="quick-shop__item-{{ unique_id }}-{{ variant.id }}"
              {% if color_hex and is_color %}
                style="background-color: {{ color_hex }}"
              {% endif %}>
              <span
                {% if color_is_mapped -%}
                  class="sr-only"
                {%- endif -%}>
                {{- option_label -}}
              </span>
            </label>
          </div>
        {%- endfor -%}
      </div>

      {%- comment -%} The product form, product id will be updated by variant.js {%- endcomment -%}
      <product-form-component class="quick-shop__form quick-shop__form--variants product-form mt-4 block">
        {%- assign product_form_id = 'product-card-form-' | append: unique_id -%}
        {%- form 'product', product, id: product_form_id, class: 'form h-full', novalidate: 'novalidate', data-type: 'add-to-cart-form' -%}
          <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
          <input type="hidden" name="inventory_quantity" value="{{ product.selected_or_first_available_variant.inventory_quantity }}">

          {%- comment -%} If preorder is enabled for this product add a line property when adding to the cart {%- endcomment -%}
          {%- if settings.enable_pre_order
            and product.tags contains 'preorder'
            and product.selected_or_first_available_variant.inventory_quantity <= 0
            and product.selected_or_first_available_variant.inventory_policy == 'continue'
          -%}
            <input
              type="hidden"
              name="properties[{%- render 'render-translation', namespace: 'products.product', key: 'pre-order', fallback: 'Pre-order' -%}]"
              value="{% render 'render-translation', namespace: 'products.product.yes', fallback: 'Yes' %}">
          {%- endif -%}

          <p class="field__message field__message--error" data-form-error>
            {%- render 'render-translation', namespace: 'products.product', key: 'option_error', option: variant_option_label, fallback: 'Please choose an {{ option }}.' -%}
          </p>

          <button
            type="submit"
            name="add"
            class="quick-shop__button quick-shop__button--form button button--primary button--md rounded-full"
            data-add-to-cart-behavior="{{ add_to_cart_behavior }}">
            {%- render 'icons', icon: 'cart', icon_class: 'w-4' -%}
            {%- render 'render-translation', namespace: 'products.product', key: 'add_to_cart', fallback: 'Add to cart' -%}
          </button>
        {%- endform -%}
      </product-form-component>
    </div>

    {% comment %} The trigger {% endcomment %}
    <button
      type="button"
      class="quick-shop__trigger {{ button_class }}"
      data-quick-shop-toggle
      data-src="#QuickShop-{{ product.id }}-{{ unique_id }}">
      {%- render 'icons', icon: 'cart', icon_class: 'w-5' -%}
      <span class="{% if view != 'alt' -%}sr-only sm:not-sr-only{%- endif -%}">
        {%- render 'render-translation', namespace: 'products.product', key: 'add_to_cart_short', fallback: 'Add' -%}
      </span>
    </button>
  {%- endif -%}
</quick-shop>
